<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://locima.com/xml2csv/MappingConfiguration" xmlns:tns="http://locima.com/xml2csv/MappingConfiguration"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<element name="MappingConfiguration" type="tns:MappingConfiguration" />

	<complexType name="MappingConfiguration">
		<annotation>
			<documentation>
				Root element of a mapping set document. This contains
				a set of mapping elements that define the mappings between the input XML
				documents and their output CSV equivalents.
			</documentation>
		</annotation>
		<sequence minOccurs="1" maxOccurs="unbounded">
			<sequence minOccurs="0" maxOccurs="1">
				<element name="Filters" type="tns:Filters" />
			</sequence>
			<sequence minOccurs="1" maxOccurs="unbounded">
				<element name="MappingList" type="tns:MappingList" />
			</sequence>
		</sequence>
		<attribute name="InlineBehaviour" type="tns:InlineBehaviour" />
	</complexType>

	<complexType name="MappingList">
		<annotation>
			<documentation>A group of mappings.</documentation>
		</annotation>
		<choice minOccurs="1" maxOccurs="unbounded">
			<element name="Mapping" type="tns:Mapping" />
			<element name="MappingList" type="tns:MappingList" />
		</choice>
		<attribute name="mappingRoot" type="string">
			<annotation>
				<documentation>XPath expression, relative to the parent mapping (or
					document element if parent is MappingConfiguration), of the root
					node for
					these
					mappings. If omitted, document element is assumed. An
					expression that returns multiple nodes will result in multiple rows
					in the output file.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="name" type="string" use="required">
			<annotation>
				<documentation>Specifies the name of this mapping output.
					This is used either as the basis of a filename (if inline is false) or
					a column name
					prefix (if inline is true).
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="Mapping">
		<annotation>
			<documentation>Specifies a single field in an output record using an
				XPath expression (relative to the parent Mapping's mappingRoot).
			</documentation>
		</annotation>
		<attribute name="xPath" type="string" use="required" />
		<attribute name="name" type="string" use="optional">
			<annotation>
				<documentation>The name of the field, specified in the first row of the output file. If ommitted
					then the value of the xPath element will be used,
					replacing and forward slash (/) characters with underscores.
				</documentation>
			</annotation>
		</attribute>
		<attribute name="onInlineDetected" type="tns:InlineBehaviour" use="optional" default="Warn" />
		<attribute name="inlineStyle" type="tns:InlineStyle" use="optional" />
		<attribute name="inlineFormat" type="string" use="optional" />
	</complexType>

	<complexType name="Filters">
		<annotation>
			<documentation>
				Used to filter XML input documents so they are processed by this mapping. If no input filters are specified then
				all documents are
				processed.
			</documentation>
		</annotation>
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="FileNameInputFilter" type="tns:FileNameInputFilter">
				<annotation>
					<documentation>
						Used to nest filters. All nested filters for an "AND" boolean logic clause with their ancestors. Sibling filters apply an "OR"
						logic.
					</documentation>
				</annotation>
			</element>
			<element name="XPathInputFilter" type="tns:XPathInputFilter">
				<annotation>
					<documentation>
						Used to nest filters. All nested filters for an "AND" boolean logic clause with their ancestors. Sibling filters apply an "OR"
						logic.
					</documentation>
				</annotation>
			</element>
		</choice>
	</complexType>

	<complexType name="FileNameInputFilter">
		<attribute name="fileNameRegex" type="string" use="optional">
			<annotation>
				<documentation>
					Enter a regular expression, which must match the absolutely path name of the XML input file, if it is to be processed.
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<complexType name="XPathInputFilter">
		<attribute name="xPath" type="string" use="optional">
			<annotation>
				<documentation>
					An XPath expression that must evaluate to true, or a non-empty node set for the mappings to be executed.
				</documentation>
			</annotation>
		</attribute>
	</complexType>

	<simpleType name="InlineBehaviour">
		<restriction base="string">
			<enumeration value="Warn" />
			<enumeration value="Error" />
			<enumeration value="Ignore" />
		</restriction>
	</simpleType>

	<simpleType name="InlineStyle" final="restriction">
		<restriction base="string">
			<enumeration value="NoCounts" />
			<enumeration value="WithCount" />
			<enumeration value="WithParentCount" />
			<enumeration value="WithCountAndParentCount" />
			<enumeration value="Custom" />
		</restriction>
	</simpleType>
</schema>