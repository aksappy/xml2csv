<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="xml2csv" xmlns:ivy="antlib:org.apache.ivy.ant">
	<path id="ivy.lib.path">
		<fileset dir="c:\apps\java\apache-ivy-2.4.0-rc1" includes="ivy-2.4.0-rc1.jar" />
	</path>
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	<property environment="env" />
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<property name="LIB" value="lib" />
	<path id="JUnit 4.libraryclasspath">
		<fileset dir="${LIB}">
			<include name="junit-4.11.jar" />
			<include name="hamcrest-core-1.3.jar" />
		</fileset>
	</path>
	<!-- The classpath to build xml2csv against -->
	<path id="xml2csv.build.classpath">
		<fileset dir="${LIB}">
			<include name="Saxon-HE-9.5.1-6.jar" />
			<include name="xercesImpl-2.11.0.jar" />
			<include name="commons-cli-1.2.jar" />
			<include name="slf4j-api-1.7.7.jar" />
		</fileset>
		<path refid="JUnit 4.libraryclasspath" />
	</path>
	<!-- The classpath required to execute xml2csv -->
	<path id="xml2csv.execute.classpath">
		<path refid="xml2csv.build.classpath" />
		<!-- Make sure that you include ALL jar files, otherwise we're taking responsibility for knowing
		     all the transitive dependendies of Jars we depend on. -->
		<fileset dir="${LIB}">
			<include name="**/*.jar" />
		</fileset>
		<!-- Don't forget to include our own bin directory -->
		<pathelement location="bin" />
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<!-- Copy all the non-compiled resources from the source directory to bin -->
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<!-- Includes all the non-compiled resources from testsrc.  One day we want to split this out to a separate bin -->
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="testsrc">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<!-- Copy all the property file (by definition these aren't compilable) -->
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="properties">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="resolve" description="Retrieve dependencies with ivy">
		<ivy:retrieve />
	</target>
	<!-- Cleaning targets -->
	<target name="clean" description="Deletes all the built artifacts">
		<delete dir="bin" />
	</target>
	<target name="clean-ivy" description="Deletes the dependencies downloaded by Ivy">
		<delete dir="${LIB}" />
	</target>
	<target name="clean-junit" description="Deletes all JUnit outputs">
		<delete dir="${junit.output.dir}" />
	</target>
	<target depends="clean, clean-ivy, clean-junit" name="clean-all" description="Deletes all built artifacts and downloaded depedencies" />
	<target depends="init,resolve" name="build" description="Compile all the sources">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<src path="testsrc" />
			<src path="properties" />
			<classpath refid="xml2csv.build.classpath" />
		</javac>
	</target>
	<target name="test" depends="build">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<batchtest todir="${junit.output.dir}">
				<fileset dir="testsrc">
					<include name="**/*Tests.java" />
				</fileset>
			</batchtest>
			<classpath refid="xml2csv.execute.classpath" />
		</junit>
	</target>
	<target name="junit-report" depends="test">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>
    <target name="create-runnable-jar" description="Create Runnable Jar for Project xml2csv with Eclipse Jar-in-Jar Loader">
        <jar destfile="C:/Users/Andy/Projects/xml2csv/xml2csv.jar">
            <manifest>
                <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
                <attribute name="Rsrc-Main-Class" value="com.locima.xml2csv.Program"/>
                <attribute name="Class-Path" value="."/>
                <attribute name="Rsrc-Class-Path" value="./ junit.jar org.hamcrest.core_1.3.0.v201303031735.jar commons-cli-1.2.jar hamcrest-core-1.3.jar junit-4.11.jar log4j-core-2.0.2.jar Saxon-HE-9.5.1-6.jar xercesImpl-2.11.0.jar log4j-1.2.17.jar slf4j-log4j12-1.7.7.jar xml-apis-1.4.01.jar slf4j-api-1.7.7.jar"/>
            </manifest>
            <zipfileset src="jar-in-jar-loader.zip"/>
            <fileset dir="C:/Users/Andy/Projects/xml2csv/bin"/>
            <zipfileset dir="C:\Apps\eclipse\plugins\org.junit_4.11.0.v201303080030" includes="junit.jar"/>
            <zipfileset dir="C:\Apps\eclipse\plugins" includes="org.hamcrest.core_1.3.0.v201303031735.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="commons-cli-1.2.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="hamcrest-core-1.3.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="junit-4.11.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="log4j-core-2.0.2.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="Saxon-HE-9.5.1-6.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="xercesImpl-2.11.0.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="log4j-1.2.17.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="slf4j-log4j12-1.7.7.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="xml-apis-1.4.01.jar"/>
            <zipfileset dir="C:\Users\Andy\Projects\xml2csv\lib" includes="slf4j-api-1.7.7.jar"/>
        </jar>
    </target>

</project>
